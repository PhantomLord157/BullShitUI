local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/PhantomLord157/ProjectBullShit/main/UILibrary.lua"))()
local Window = Library.CreateLib("卐 Operation Nexus V 1.3.7  卍", "DarkTheme")

-- Main --
local ESP = Window:NewTab("ESP")
local ESPSection = ESP:NewSection("ESP")


ESPSection:NewButton("ESP", "Shows enemy player chams, health, name, and distance from you.", function()
    local player = game.Players.LocalPlayer
    local RunService = game:GetService("RunService")
    
    local highlight = Instance.new("Highlight")
    highlight.Name = "Highlight"
    
    local highlightColor = Color3.new(1, 0, 0) -- Set the highlight color
    
    local function createHighlight(character, highlightColor)
        if character and not character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight") then
            local highlightClone = highlight:Clone()
            highlightClone.Adornee = character
            highlightClone.Parent = character:FindFirstChild("HumanoidRootPart")
            highlightClone.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
            highlightClone.Color3 = highlightColor
            highlightClone.Name = "Highlight"
        end
    end
    
    local function updatePlayerLabels()
        local playerPosition = player.Character and player.Character.HumanoidRootPart.Position
        if not playerPosition then
            return
        end
        
        for _, otherPlayer in pairs(game.Players:GetPlayers()) do
            if otherPlayer ~= player then
                local character = otherPlayer.Character
                local humanoid = character and character:FindFirstChild("Humanoid")
                local head = character and character:FindFirstChild("Head")        
                local nameLabel = head and head:FindFirstChild("PlayerLabel")
                
                if humanoid and head and humanoid.Health > 0 then
                    local distance = (head.Position - player.Character.Head.Position).Magnitude
                    
                    if not nameLabel then
                        nameLabel = Instance.new("BillboardGui")
                        nameLabel.Name = "PlayerLabel"
                        nameLabel.AlwaysOnTop = true
                        nameLabel.ExtentsOffset = Vector3.new(0, 3, 0)
                        nameLabel.Size = UDim2.new(0, 100, 0, 30)
                        
                        local nameLabelText = Instance.new("TextLabel")
                        nameLabelText.Name = "NameLabel"
                        nameLabelText.BackgroundTransparency = 1
                        nameLabelText.Position = UDim2.new(0, 0, 0, 0)
                        nameLabelText.Size = UDim2.new(1, 0, 0.5, 0)
                        nameLabelText.Text = ""
                        nameLabelText.TextColor3 = Color3.new(1, 1, 1)
                        nameLabelText.Font = Enum.Font.SourceSansBold
                        nameLabelText.TextSize = 18
                        nameLabelText.Parent = nameLabel
        
                        local healthLabel = Instance.new("TextLabel")
                        healthLabel.Name = "HealthLabel"
                        healthLabel.BackgroundTransparency = 1
                        healthLabel.Position = UDim2.new(0, 0, 0.5, 0)
                        healthLabel.Size = UDim2.new(1, 0, 0.5, 0)
                        healthLabel.Text = ""
                        healthLabel.TextColor3 = Color3.new(1, 1, 1)
                        healthLabel.Font = Enum.Font.SourceSansBold
                        healthLabel.TextSize = 18
                        healthLabel.Parent = nameLabel
        
                        nameLabel.Parent = head
                    end
                    
                    nameLabel.NameLabel.Text = otherPlayer.Name
                    nameLabel.HealthLabel.Text = string.format("Distance: %.2f | Health: %d", distance, humanoid.Health)
                    nameLabel.Adornee = head
                    
                    createHighlight(character, highlightColor)
                elseif nameLabel then
                    nameLabel:Destroy()
                end
            end
        end
    end
    
    local function playerAdded(playerAdded)
        repeat wait() until playerAdded.Character
        updatePlayerLabels()
    end
    
    game.Players.PlayerAdded:Connect(playerAdded)
    
    game.Players.PlayerRemoving:Connect(function(playerRemoved)
        local character = playerRemoved.Character
        if character then
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                local highlight = humanoidRootPart:FindFirstChild("Highlight")
                if highlight then
                    highlight:Destroy()
                end
            end
        end
    end)
    
    RunService.Heartbeat:Connect(function()
        updatePlayerLabels()
    end)
    
end)

ESPSection:NewButton("FullBright", "Night time is supposed to be dark?", function()
    local Lighting = game:GetService("Lighting")
    Lighting.Ambient = Color3.new(1, 1, 1)
    Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
end)

local Aimbot = Window:NewTab("Aimbot")
local AimbotSection = Aimbot:NewSection("Aimbot")
local AimbotTogglesSection = Aimbot:NewSection("Aimbot Toggles")
local FOVTogglesSection = Aimbot:NewSection("FOV Toggles")

AimbotSection:NewButton("Add Aimbot", "Click This For Aimbot To Work", function()
    local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Holding = false

_G.AimbotEnabled = true
_G.TeamCheck = true
_G.AimPart = "Head"
_G.Sensitivity = 0

_G.CircleSides = 64
_G.CircleColor = Color3.fromRGB(255, 255, 255)
_G.CircleTransparency = 0.7
_G.CircleRadius = 80
_G.CircleFilled = false
_G.CircleVisible = true
_G.CircleThickness = 0

local FOVCircle = Drawing.new("Circle")
FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
FOVCircle.Radius = _G.CircleRadius
FOVCircle.Filled = _G.CircleFilled
FOVCircle.Color = _G.CircleColor
FOVCircle.Visible = _G.CircleVisible
FOVCircle.Transparency = _G.CircleTransparency
FOVCircle.NumSides = _G.CircleSides
FOVCircle.Thickness = _G.CircleThickness

local function GetClosestPlayer()
    local MaximumDistance = _G.CircleRadius
    local Target = nil
    local ClosestDistance = math.huge -- Initialize with a large value

    for _, v in next, Players:GetPlayers() do
        if v.Name ~= LocalPlayer.Name then
            if _G.TeamCheck == true then
                if v.Team ~= LocalPlayer.Team then
                    if v.Character then
                        local HumanoidRootPart = v.Character:FindFirstChild("HumanoidRootPart")
                        if HumanoidRootPart then
                            local direction = HumanoidRootPart.Position - Camera.CFrame.Position
                            local angle = math.acos(Camera.CFrame.LookVector:Dot(direction.Unit))
                            local fov = math.rad(45) -- Set your desired FOV angle in radians

                            if angle < fov then
                                local Humanoid = v.Character:FindFirstChild("Humanoid")
                                if Humanoid and Humanoid.Health > 0 then
                                    local ScreenPoint = Camera:WorldToScreenPoint(HumanoidRootPart.Position)
                                    local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude

                                    if VectorDistance < MaximumDistance and VectorDistance < ClosestDistance then
                                        Target = v
                                        ClosestDistance = VectorDistance
                                    end
                                end
                            end
                        end
                    end
                end
            else
                if v.Character then
                    local HumanoidRootPart = v.Character:FindFirstChild("HumanoidRootPart")
                    if HumanoidRootPart then
                        local Humanoid = v.Character:FindFirstChild("Humanoid")
                        if Humanoid and Humanoid.Health > 0 then
                            local ScreenPoint = Camera:WorldToScreenPoint(HumanoidRootPart.Position)
                            local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude

                            if VectorDistance < MaximumDistance then
                                Target = v
                            end
                        end
                    end
                    return Target
                end
            end
        end
    end
    return Target
end

UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        Holding = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        Holding = false
    end
end)

RunService.RenderStepped:Connect(function()
    FOVCircle.Position = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
    FOVCircle.Radius = _G.CircleRadius
    FOVCircle.Filled = _G.CircleFilled
    FOVCircle.Color = _G.CircleColor
    FOVCircle.Visible = _G.CircleVisible
    FOVCircle.Transparency = _G.CircleTransparency
    FOVCircle.NumSides = _G.CircleSides
    FOVCircle.Thickness = _G.CircleThickness

    if Holding and _G.AimbotEnabled then
        local targetPlayer = GetClosestPlayer()
        if targetPlayer then
            local targetPart = targetPlayer.Character[_G.AimPart]
            if targetPart then
                local targetPosition = targetPart.Position
                local lookVector = (targetPosition - Camera.CFrame.Position).Unit
                local targetCFrame = CFrame.new(Camera.CFrame.Position, Camera.CFrame.Position + lookVector)
                TweenService:Create(Camera, TweenInfo.new(_G.Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = targetCFrame}):Play()
            end
        end
    end
end)

end)

AimbotSection:NewButton("Silent Aim", "Never Miss", function ()
    local player = game.Players.LocalPlayer
    local UserInputService = game:GetService("UserInputService")
    
    local originalViewCFrame = player.Camera.CFrame
    local isFiring = false
    
    local function updatePlayerLabels()
        local closestPlayer = nil
        local minDistance = math.huge
    
        for _, otherPlayer in pairs(game.Players:GetPlayers()) do
            if otherPlayer ~= player then
                local character = otherPlayer.Character
                local humanoid = character and character:FindFirstChild("Humanoid")
                local head = character and character:FindFirstChild("Head")        
    
                if humanoid and head and humanoid.Health > 0 then
                    local distance = (head.Position - player.Character.Head.Position).Magnitude
                    local angle = math.acos(player.Character.Head.CFrame.lookVector:Dot((head.Position - player.Character.Head.Position).unit))
                    local fov = math.rad(45) -- Set your desired field of view angle in radians
    
                    if angle < fov and distance < minDistance then
                        closestPlayer = otherPlayer
                        minDistance = distance
                    end
                end
            end
        end
    
        if closestPlayer and isFiring then
            local character = closestPlayer.Character
            local humanoid = character:FindFirstChild("Humanoid")
    
            if character and humanoid and humanoid.Health > 0 then
                local targetDirection = (character.Head.Position - player.Character.Head.Position).unit
                bulletSpeed = 1000 -- Set your desired bullet speed
    
                -- Simulate a hit by specifying a hit position (adjust as needed)
                local hitPosition = player.Character.Head.Position + targetDirection * 50 -- Example hit position
    
                -- Implement impact logic here using the simulated hit position
                print("Bullet hit at position:", hitPosition)
            end
    
            -- Return to original view angle immediately after firing
            player.Camera.CFrame = originalViewCFrame
            isFiring = false
        end
    end
    
    local function onInputChanged(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            if input.UserInputState == Enum.UserInputState.Begin then
                isFiring = true
                originalViewCFrame = player.Camera.CFrame
            end
        end
    end
    
    local function playerAdded(playerAdded)
        repeat wait() until playerAdded.Character
        updatePlayerLabels()
    end
    
    game.Players.PlayerAdded:Connect(playerAdded)
    
    game.Players.PlayerRemoving:Connect(function(playerRemoved)
        local character = playerRemoved.Character
        if character then
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                local highlight = humanoidRootPart:FindFirstChild("Highlight")
                if highlight then
                    highlight:Destroy()
                end
            end
        end
    end)
    
    UserInputService.InputChanged:Connect(onInputChanged)
    
    game:GetService("RunService").Heartbeat:Connect(function()
        if isFiring then
            updatePlayerLabels()
        end
    end)    
end)

AimbotTogglesSection:NewToggle("Enable Aimbot", "Enables Aimbot", function(state)
    _G.AimbotEnabled = state
end)

AimbotTogglesSection:NewToggle("Enable Team Check", "Enables Team Check", function(state)
    _G.TeamCheck = state
end)

AimbotTogglesSection:NewSlider("Aimlock Speed", "The Lower The Number The Faster The Lock", 1, 0, function(s)
    _G.Sensitivity = s
end)

AimbotTogglesSection:NewSlider("Bullet Speed", "Change to the bullets speed", 5000, 0, function(s)
    bulletSpeed = s
end)

FOVTogglesSection:NewSlider("FOV Size", "Changes The Size Of The FOV", 1000, 0, function(s)
    _G.CircleRadius = s
end)

FOVTogglesSection:NewSlider("FOV Sides", "Changes The Amount Of Sides The FOV Has", 100, 0, function(s)
    _G.CircleSides = s
end)

FOVTogglesSection:NewSlider("FOV Transparency", "Changes The Transparency Of The FOV", 2, 0, function(s)
    _G.CircleTransparency = s
end)

FOVTogglesSection:NewSlider("FOV Thickness", "Changes The Thickness Of The FOV", 30, 0, function(s)
    _G.CircleThickness = s
end)

FOVTogglesSection:NewToggle("FOV Filled", "You can't see where your aiming now retard", function(state)
    _G.CircleFilled = state
end)

FOVTogglesSection:NewToggle("FOV Visible", "Great Now You Dont Know Where You Gonna Lock", function(state)
    _G.CircleVisible = state
end)

FOVTogglesSection:NewColorPicker("FOV Color", "Changes The FOV Color", Color3.fromRGB(0, 0, 0), function(color)
    _G.CircleColor = color
end)

local CrossHair = Window:NewTab("CrossHair")
local CrosshairSettings = CrossHair:NewSection("Crosshair Settings")

CrosshairSettings:NewButton("Add Crosshair", "Its A CrossHair", function ()
    local function API_Check()
        if Drawing == nil then
            return "No"
        else
            return "Yes"
        end
    end
    
    local Find_Required = API_Check()
    
    if Find_Required == "No" then
        game:GetService("StarterGui"):SetCore("SendNotification",{
            Title = "Exunys Developer";
            Text = "Crosshair script could not be loaded because your exploit is unsupported.";
            Duration = math.huge;
            Button1 = "OK"
        })
    
        return
    end
    
    local Players = game:GetService("Players")
    local RunService = game:GetService("RunService")
    local UserInputService = game:GetService("UserInputService")
    local Camera = workspace.CurrentCamera
    
    local Typing = false
    
    local ViewportSize_ = Camera.ViewportSize / 2
    local Axis_X, Axis_Y = ViewportSize_.X, ViewportSize_.Y
    
    local HorizontalLine = Drawing.new("Line")
    local VerticalLine = Drawing.new("Line")
    
    _G.SendNotifications = true   -- If set to true then the script would notify you frequently on any changes applied and when loaded / errored. (If a game can detect this, it is recommended to set it to false)
    _G.DefaultSettings = false   -- If set to true then the script would create a crosshair with the default settings regardless of any changes.
    _G.ToMouse = true   -- If set to true then the crosshair will be positioned to your mouse cursor's position. If set to false it will be positioned to the center of your screen.
    
    _G.CrosshairVisible = true   -- If set to true then the crosshair would be visible and vice versa.
    _G.CrosshairSize = 20   -- The size of the crosshair.
    _G.CrosshairThickness = 1   -- The thickness of the crosshair.
    _G.CrosshairColor = Color3.fromRGB(0, 255, 0)   -- The color of the crosshair
    _G.CrosshairTransparency = 1   -- The transparency of the crosshair.
    
    _G.DisableKey = Enum.KeyCode.Q   -- The key that enables / disables the crosshair.
    
    RunService.RenderStepped:Connect(function()
        local Real_Size = _G.CrosshairSize / 2
    
        HorizontalLine.Color = _G.CrosshairColor
        HorizontalLine.Thickness = _G.CrosshairThickness
        HorizontalLine.Visible = _G.CrosshairVisible
        HorizontalLine.Transparency = _G.CrosshairTransparency
        
        VerticalLine.Color = _G.CrosshairColor
        VerticalLine.Thickness = _G.CrosshairThickness
        VerticalLine.Visible = _G.CrosshairVisible
        VerticalLine.Transparency = _G.CrosshairTransparency
        
        if _G.ToMouse == true then
            HorizontalLine.From = Vector2.new(UserInputService:GetMouseLocation().X - Real_Size, UserInputService:GetMouseLocation().Y)
            HorizontalLine.To = Vector2.new(UserInputService:GetMouseLocation().X + Real_Size, UserInputService:GetMouseLocation().Y)
            
            VerticalLine.From = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y - Real_Size)
            VerticalLine.To = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y + Real_Size)
        elseif _G.ToMouse == false then
            HorizontalLine.From = Vector2.new(Axis_X - Real_Size, Axis_Y)
            HorizontalLine.To = Vector2.new(Axis_X + Real_Size, Axis_Y)
        
            VerticalLine.From = Vector2.new(Axis_X, Axis_Y - Real_Size)
            VerticalLine.To = Vector2.new(Axis_X, Axis_Y + Real_Size)
        end
    end)
    
    if _G.DefaultSettings == true then
        _G.CrosshairVisible = true
        _G.CrosshairSize = 25
        _G.CrosshairThickness = 1
        _G.CrosshairColor = Color3.fromRGB(40, 90, 255)
        _G.CrosshairTransparency = 0.15
        _G.DisableKey = Enum.KeyCode.Q
    end
    
    UserInputService.TextBoxFocused:Connect(function()
        Typing = true
    end)
    
    UserInputService.TextBoxFocusReleased:Connect(function()
        Typing = false
    end)
    
    UserInputService.InputBegan:Connect(function(Input)
        if Input.KeyCode == _G.DisableKey and Typing == false then
            _G.CrosshairVisible = not _G.CrosshairVisible
            
            if _G.SendNotifications == true then
                game:GetService("StarterGui"):SetCore("SendNotification",{
                    Title = "Operation Nexus";
                    Text = "The crosshair's visibility is now set to "..tostring(_G.CrosshairVisible)..".";
                    Duration = 5;
                })
            end
        end
    end)
end)

CrosshairSettings:NewToggle("Toggle Notifications", "Toggles Notifications", function(state)
    _G.SendNotifications = state
end)

CrosshairSettings:NewToggle("Enable Crosshair", "Or just press Q", function(state)
    _G.CrosshairVisible = state
end)

CrosshairSettings:NewSlider("Crosshair Size", "Changes the size of the Crosshair", 200, 0, function(s)
    _G.CrosshairSize = s
end)

CrosshairSettings:NewToggle("Lock Center Screen", "Locks the Crosshair to the center of the screen", function(state)
    _G.ToMouse = state
end)

CrosshairSettings:NewSlider("Crosshair Thickness", "Make the Crosshair Thicker", function(s)
    _G.CrosshairThickness = s
end)

CrosshairSettings:NewColorPicker("Crosshair Color", "Changes the color of the crosshair", Color3.fromRGB(0, 0, 0), function(color)
    _G.CrosshairColor = color
end)

local character = Window:NewTab("Character")
local movementSection = character:NewSection("Movement")

movementSection:NewSlider("Walk Speed Slider", "Speed", 500, 0, function(s)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

movementSection:NewSlider("Jump power Slider", "Jump", 500, 0, function(s)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = s
end)

local Other = Window:NewTab("Other Scripts")
local OthersSection = Other:NewSection("Scripts")

OthersSection:NewButton("Inf Yield", "In Case You Need It.", function()
        loadstring(game:HttpGet(("https://raw.githubusercontent.com/PhantomLord157/ProjectBullShit/main/Inf%20Yeild"),true))()
end)

OthersSection:NewButton("Dark Dex", "In Case You Need It.", function()
        loadstring(game:HttpGet(("https://raw.githubusercontent.com/PhantomLord157/ProjectBullShit/main/DarkDex"),true))()
end)

OthersSection:NewButton("Simply Spy", "In Case You Need It.", function()
        loadstring(game:HttpGet(("https://raw.githubusercontent.com/PhantomLord157/ProjectBullShit/main/Remote%20Spy"),true))()
end)

local Experimental = Window:NewTab("Experimental")
local VisualsSection = Experimental:NewSection("Visuals")

